{"version":3,"sources":["shaders/screen-vertex.js","shaders/screen-fragment.js","fire.mp4","ThreeFuncs.js","Volume.js","StreamControls.js","ArtistStream.js","PressStart.js","ThreeWorld.js","App.js","index.js"],"names":["vertexShader","fshader","randomI","max","Math","floor","random","CAMERA_START","orbGeoRef","THREE","scene","gui","undefined","stats","Stats","ray","mouse","orbs","collisionObjects","createScreen","video","require","default","fragmentShader","videoTexture","geometry","material","uniforms","resolution","value","transparent","depthWrite","depthTest","mesh","position","z","y","add","backGeo","backMaterial","color","backMesh","castShadow","push","r","createOrb","document","querySelector","n","i","rColor","x","set","rotation","PI","vId","id","replace","Volume","changeVolume","canvasRef","useRef","useEffect","canvas","current","ctx","getContext","w","width","h","height","rect","fillStyle","fill","up","onmousedown","e","ontouchstart","changeBar","getBoundingClientRect","coords","touches","clientX","left","clearRect","beginPath","onmousemove","ontouchmove","onmouseup","ref","StreamControls","videoRef","isPlaying","isMuted","toggleMute","onClick","currentTime","seekable","end","console","log","pause","play","navigator","platform","volume","min","val","url","ArtistStream","phase","test","useState","loading","setLoading","retryCounter","setRetryCounter","setIsPlaying","setIsMuted","initStream","useCallback","a","fetch","then","d","status","source","Hls","isSupported","hls","loadSource","attachMedia","src","incrementCounter","setTimeout","fire","onplay","onpause","muted","className","crossOrigin","playsInline","autoPlay","loop","controls","PressStart","styles","setStyles","marginLeft","marginTop","opacity","style","ThreeWorld","setPhase","worldContainerRef","camera","window","innerWidth","innerHeight","lookAt","moveForward","moveBackward","moveLeft","moveRight","velocity","direction","renderer","setClearColor","setSize","setPixelRatio","devicePixelRatio","shadowMap","enabled","type","appendChild","domElement","analyser","dataArray","startButtonObject","name","buttonState","widthSegments","heightSegments","folder","addFolder","onChange","startButton","rotateX","toNonIndexed","receiveShadow","createFloor","light","target","shadow","mapSize","near","far","right","top","bottom","createLight","addEventListener","checkClick","started","clickAnimationRunning","evt","firstTouch","originalEvent","getTouches","xDown","yDown","clientY","rotateStart","rotateEnd","rotateDelta","subVectors","copy","phi","theta","xUp","yUp","xDiff","yDiff","abs","scope","maxPolarAngle","frame","prevTime","previousPhi","previousTheta","euler","bbox","canJump","orientation","animate","requestAnimationFrame","setFromEuler","quaternion","time","performance","now","isLocked","Number","normalize","delta","controlObject","getObject","oldPosition","sphere","length","object","computeBoundingBox","boundingBox","applyMatrix4","matrixWorld","intersectsBox","getByteFrequencyData","wave","sin","scale","render","update","onWindowResize","aspect","updateProjectionMatrix","cancelAnimationFrame","removeEventListener","TouchEvent","mouseVector","setFromCamera","intersectObjects","audioCtx","AudioContext","webkitAudioContext","createAnalyser","createMediaElementSource","connect","destination","fftSize","bufferLength","frequencyBinCount","Uint8Array","setupAudioContext","start","currentColor","buttonAnimation","lerp","b","PointerLockControls","lock","key","err","ReactDOM","StrictMode","App","getElementById"],"mappings":"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","file":"static/js/main.f8a60fa5.chunk.js","sourcesContent":["const vertexShader = `\r\nvarying vec2 vUv;\r\nvoid main() {\r\n    vUv = uv;\r\n\r\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\r\n    //gl_Position = vec4(position, 1.0);\r\n}`;\r\n\r\nexport default vertexShader;\r\n","const fragmentShader = `\r\nuniform vec4 resolution;\r\nuniform sampler2D videoTexture;\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n    vec2 newUV = (vUv - vec2(0.5)) * resolution.xy + vec2(.5);\r\n    vec4 tex = texture2D(videoTexture, newUV);\r\n    gl_FragColor = tex;\r\n}`;\r\n\r\nconst fshader = `\r\nvarying vec2 vUv;\r\n\r\nuniform sampler2D videoTexture;\r\nuniform vec2 resolution;\r\n\r\nvoid main()\r\n{\r\n  vec2 uv = vec2(0.5) + vUv * resolution.xy - resolution.xy*0.5;\r\n  vec4 color = vec4(0.);\r\n  if (uv.x>=0.0 && uv.y>=0.0 && uv.x<1.0 && uv.y<1.0) color = vec4(texture2D(videoTexture, uv).rgb, 1.0);\r\n  gl_FragColor = color;\r\n}\r\n`;\r\n\r\nexport default fshader;\r\n","export default __webpack_public_path__ + \"static/media/fire.5b252a8b.mp4\";","import * as THREE from \"three\";\r\nimport { GUI } from \"three/examples/jsm/libs/dat.gui.module.js\";\r\nimport Stats from \"three/examples/jsm/libs/stats.module.js\";\r\n\r\nconst randomI = (max) => Math.floor(Math.random() * max);\r\n\r\nexport const lerp = (x, a, b) => {\r\n  return x * (b - a) + a;\r\n};\r\n\r\nconst randomColor = () =>\r\n  new THREE.Color(\r\n    `rgb(${randomI(255) + 20}, ${randomI(255) + 20}, ${randomI(255) + 20})`\r\n  );\r\nconst gVideo = () => document.querySelector(\"#master\");\r\n\r\nexport const CAMERA_START = { x: 0, y: 20, z: 50 };\r\n\r\nconst orbGeoRef = new THREE.SphereGeometry(1, 30, 30);\r\nexport const scene = new THREE.Scene();\r\nvar gui = undefined;\r\n// gui = new GUI();\r\nexport const stats = new Stats();\r\nexport const ray = new THREE.Raycaster();\r\nexport const mouse = new THREE.Vector2(9999, 9999);\r\nexport var orbs = [];\r\nexport var collisionObjects = [];\r\n\r\nexport const startButton = () => {\r\n  const geometry = new THREE.SphereGeometry(1, 20, 20);\r\n  const material = new THREE.MeshPhysicalMaterial({\r\n    color: new THREE.Color(1, 0, 0),\r\n    transparent: true,\r\n  });\r\n  const mesh = new THREE.Mesh(geometry, material);\r\n  mesh.name = \"start-button\";\r\n  const { x, y, z } = CAMERA_START;\r\n  const buttonState = {\r\n    x,\r\n    y: y - 2,\r\n    z: z - 5,\r\n    widthSegments: 1,\r\n    heightSegments: 1,\r\n  };\r\n  mesh.position.set(buttonState.x, buttonState.y, buttonState.z);\r\n  scene.add(mesh);\r\n  if (gui) {\r\n    const folder = gui.addFolder(\"Start Button\");\r\n    folder\r\n      .add(buttonState, \"x\", -20, 20, 0.1)\r\n      .onChange((e) => (mesh.position.x = e));\r\n    folder\r\n      .add(buttonState, \"y\", -20, 20, 0.1)\r\n      .onChange((e) => (mesh.position.y = e));\r\n    folder\r\n      .add(buttonState, \"z\", buttonState.z - 20, buttonState.z + 20, 0.1)\r\n      .onChange((e) => (mesh.position.z = e));\r\n  }\r\n  return mesh;\r\n};\r\n\r\nexport const createFloor = () => {\r\n  var geometry = new THREE.PlaneBufferGeometry(200, 200, 100, 100);\r\n  geometry.rotateX(-Math.PI / 2);\r\n  geometry = geometry.toNonIndexed();\r\n  const material = new THREE.MeshStandardMaterial({ color: \"white\" });\r\n  const mesh = new THREE.Mesh(geometry, material);\r\n  mesh.position.y = -2;\r\n  mesh.receiveShadow = true;\r\n  mesh.castShadow = true;\r\n  mesh.name = \"floor\";\r\n  scene.add(mesh);\r\n};\r\n\r\nexport const createLight = () => {\r\n  const color = 0xffffff;\r\n  const intensity = 1.9;\r\n  const light = new THREE.DirectionalLight(color, intensity, 100);\r\n  light.position.set(0, 70, 30);\r\n  light.target.position.set(0, 0, -10);\r\n  light.castShadow = true;\r\n  light.shadow.mapSize.width = 2048;\r\n  light.shadow.mapSize.height = 2048;\r\n  light.shadow.camera.near = 0.5;\r\n  light.shadow.camera.far = 500;\r\n  const shadowF = 50;\r\n  light.shadow.camera.left = -shadowF;\r\n  light.shadow.camera.right = shadowF;\r\n  light.shadow.camera.top = shadowF;\r\n  light.shadow.camera.bottom = -shadowF;\r\n  scene.add(light);\r\n  scene.add(light.target);\r\n};\r\n\r\nexport const createScreen = (video) => {\r\n  const vertexShader = require(\"./shaders/screen-vertex.js\").default;\r\n  const fragmentShader = require(\"./shaders/screen-fragment.js\").default;\r\n  const videoTexture = new THREE.VideoTexture(video);\r\n  const geometry = new THREE.PlaneGeometry(10, 10);\r\n  const material = new THREE.ShaderMaterial({\r\n    uniforms: {\r\n      resolution: { value: new THREE.Vector2(1, 16 / 9) },\r\n      videoTexture: { value: videoTexture },\r\n    },\r\n    transparent: true,\r\n    vertexShader,\r\n    fragmentShader,\r\n    depthWrite: true,\r\n    depthTest: true,\r\n  });\r\n  const mesh = new THREE.Mesh(geometry, material);\r\n  mesh.position.z = -10;\r\n  mesh.position.y = 0.5;\r\n  scene.add(mesh);\r\n\r\n  const backGeo = new THREE.BoxBufferGeometry(10, 6.5, 2);\r\n  const backMaterial = new THREE.MeshStandardMaterial({ color: \"black\" });\r\n  const backMesh = new THREE.Mesh(backGeo, backMaterial);\r\n  backMesh.castShadow = true;\r\n  backMesh.position.z = -11.1;\r\n  collisionObjects.push(backMesh);\r\n  scene.add(backMesh);\r\n};\r\n\r\nconst r = 100;\r\nexport const createOrb = ({ video = gVideo(), color, n = 1 }) => {\r\n  for (var i = 0; i < n; i++) {\r\n    const rColor = randomColor();\r\n    const geometry = orbGeoRef;\r\n    // const texture = new THREE.VideoTexture(video);\r\n    const material = new THREE.MeshPhysicalMaterial({\r\n      // map: texture,\r\n      color: color ? color : rColor,\r\n      // transparent: true,\r\n      // opacity: 0.7,\r\n    });\r\n    const mesh = new THREE.Mesh(geometry, material);\r\n\r\n    const x = Math.random() * 2 * r - (2 * r) / 2;\r\n    const y = Math.random() * r;\r\n    const z = Math.random() * 2 * r - (2 * r) / 2;\r\n    // const z = Math.random() * r * 3;\r\n    mesh.position.set(x, y, z);\r\n    mesh.rotation.y = Math.PI * 1.5;\r\n    mesh.castShadow = true;\r\n    if (video) mesh.vId = video.id.replace(\"remote-video-\", \"\");\r\n    scene.add(mesh);\r\n    orbs.push(mesh);\r\n  }\r\n};\r\n\r\nexport const removeOrb = (event) => {\r\n  const vId = event.stream.streamId;\r\n  orbs = orbs.filter((o) => o.vId !== vId);\r\n  for (let i = 0; i < scene.children.length; i++) {\r\n    const orb = scene.children[i];\r\n    if (orb.vId === vId) {\r\n      scene.remove(orb);\r\n    }\r\n  }\r\n};\r\n","import React, { useEffect, useRef } from \"react\";\r\nexport default function Volume({ changeVolume }) {\r\n  const canvasRef = useRef();\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas.getContext(\"2d\");\r\n    const { width: w, height: h } = canvas;\r\n    ctx.rect(0, 0, w, h);\r\n    ctx.fillStyle = \"#00ffb1\";\r\n    ctx.fill();\r\n\r\n    let up = true;\r\n    canvas.onmousedown = (e) => {\r\n      up = false;\r\n    };\r\n\r\n    canvas.ontouchstart = () => (up = false);\r\n\r\n    const changeBar = (e) => {\r\n      if (!up) {\r\n        var rect = canvas.getBoundingClientRect();\r\n        const ctx = canvas.getContext(\"2d\");\r\n        const x = e.touches ? e.touches[0].clientX : e.clientX;\r\n        const coords = { x: x - rect.left };\r\n        ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\r\n        ctx.beginPath();\r\n        ctx.rect(0, 0, coords.x, h);\r\n        ctx.fill();\r\n        changeVolume(coords.x / ctx.canvas.width);\r\n      }\r\n    };\r\n\r\n    canvas.onmousemove = changeBar;\r\n    canvas.ontouchmove = changeBar;\r\n\r\n    document.onmouseup = () => (up = true);\r\n  }, []);\r\n\r\n  return (\r\n    <div id=\"volume\">\r\n      <canvas ref={canvasRef} />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { createOrb } from \"./ThreeFuncs\";\r\nimport Volume from \"./Volume\";\r\n\r\nfunction clamp(val, min, max) {\r\n  return val > max ? max : val < min ? min : val;\r\n}\r\n\r\nexport default function StreamControls({\r\n  videoRef,\r\n  isPlaying,\r\n  isMuted,\r\n  toggleMute,\r\n}) {\r\n  const changeVolume = (volume) =>\r\n    (videoRef.current.volume = clamp(volume, 0, 1));\r\n\r\n  const togglePlay = () => {\r\n    const video = videoRef.current;\r\n    console.log(isPlaying);\r\n    if (isPlaying) {\r\n      video.pause();\r\n    } else {\r\n      video.play();\r\n    }\r\n  };\r\n\r\n  const goToLive = () => {\r\n    const video = videoRef.current;\r\n    video.currentTime = video.seekable.end(0);\r\n  };\r\n\r\n  return (\r\n    <div id=\"controls-container\">\r\n      <div onClick={goToLive}>Go To Live</div>\r\n      <div onClick={togglePlay}>{isPlaying ? \"Pause\" : \"Play\"}</div>\r\n      <div onClick={toggleMute}>{isMuted ? \"Unmute\" : \"Mute\"}</div>\r\n      <div onClick={createOrb}>Orb</div>\r\n      {navigator.platform !== \"iPhone\" && (\r\n        <Volume changeVolume={changeVolume} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport Hls from \"hls.js\";\r\nimport fire from \"./fire.mp4\";\r\nimport StreamControls from \"./StreamControls\";\r\nconst url = \"https://ice.raptor.pizza/hls/meiosis.m3u8\";\r\nconst MAX_RETRIES = 15;\r\nexport default function ArtistStream({\r\n  createScreen,\r\n  phase,\r\n  videoRef,\r\n  test = false,\r\n}) {\r\n  const [loading, setLoading] = useState(!test);\r\n  const [retryCounter, setRetryCounter] = useState(0);\r\n  const [isPlaying, setIsPlaying] = useState(false);\r\n  const [isMuted, setIsMuted] = useState(true);\r\n\r\n  const initStream = useCallback(async () => {\r\n    const video = videoRef.current;\r\n    await fetch(url)\r\n      .then((r) => r)\r\n      .then((d) => {\r\n        if (d.status === 404) {\r\n          return false;\r\n        }\r\n        setLoading(false);\r\n        const source = url;\r\n        if (Hls.isSupported()) {\r\n          const hls = new Hls();\r\n          hls.loadSource(source);\r\n          hls.attachMedia(video);\r\n        } else {\r\n          video.src = source;\r\n        }\r\n      });\r\n  }, [videoRef]);\r\n\r\n  useEffect(() => {\r\n    initStream();\r\n  }, [initStream]);\r\n\r\n  const incrementCounter = useCallback(\r\n    () => setRetryCounter(retryCounter + 1),\r\n    [retryCounter]\r\n  );\r\n  useEffect(() => {\r\n    if (!loading) return;\r\n    if (retryCounter > MAX_RETRIES) {\r\n      setRetryCounter(0);\r\n      return initStream();\r\n    }\r\n    setTimeout(incrementCounter, 1000);\r\n  }, [initStream, incrementCounter, retryCounter, loading]);\r\n\r\n  useEffect(() => {\r\n    videoRef.current.src = fire;\r\n    createScreen(videoRef.current);\r\n    videoRef.current.onplay = () => setIsPlaying(true);\r\n    videoRef.current.onpause = () => setIsPlaying(false);\r\n    //  eslint-disable-next-line\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const video = videoRef.current;\r\n    if (isMuted) {\r\n      video.muted = true;\r\n    } else {\r\n      video.muted = false;\r\n    }\r\n  }, [isMuted, videoRef]);\r\n\r\n  const toggleMute = (e) => {\r\n    console.log(e);\r\n    setIsMuted(!isMuted);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <video\r\n        id=\"artist-stream\"\r\n        className=\"video-js\"\r\n        crossOrigin=\"true\"\r\n        ref={videoRef}\r\n        playsInline\r\n        autoPlay\r\n        loop\r\n        controls\r\n        muted\r\n      />\r\n      {/* {phase > 0 && ( */}\r\n      <StreamControls\r\n        videoRef={videoRef}\r\n        isPlaying={isPlaying}\r\n        isMuted={isMuted}\r\n        toggleMute={toggleMute}\r\n      />\r\n      {/* )} */}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\n\r\nexport default function PressStart({ phase }) {\r\n  const [styles, setStyles] = useState();\r\n  const ref = useRef();\r\n  useEffect(() => {\r\n    const rect = ref.current.getBoundingClientRect();\r\n    setStyles({\r\n      marginLeft: -rect.width / 2 + \"px\",\r\n      marginTop: -rect.height / 2 + \"px\",\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (phase === 1) {\r\n      setStyles({\r\n        ...styles,\r\n        opacity: 0,\r\n      });\r\n    }\r\n  }, [phase]);\r\n  return (\r\n    <div ref={ref} style={styles} id=\"press-start\">\r\n      Press\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport * as THREE from \"three\";\r\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\r\nimport { PointerLockControls } from \"three/examples/jsm/controls/PointerLockControls\";\r\nimport ArtistStream from \"./ArtistStream\";\r\nimport PressStart from \"./PressStart\";\r\nimport {\r\n  CAMERA_START,\r\n  collisionObjects,\r\n  createFloor,\r\n  createLight,\r\n  createOrb,\r\n  createScreen,\r\n  lerp,\r\n  mouse,\r\n  orbs,\r\n  ray,\r\n  scene,\r\n  startButton,\r\n  stats,\r\n} from \"./ThreeFuncs\";\r\n\r\nconst test = false;\r\n\r\nexport default function ThreeWorld() {\r\n  const [phase, setPhase] = useState(0);\r\n  const worldContainerRef = useRef(undefined);\r\n  const videoRef = useRef(undefined);\r\n\r\n  useEffect(() => {\r\n    if (phase === 1) {\r\n    }\r\n  }, [phase]);\r\n\r\n  useEffect(() => {\r\n    if (worldContainerRef.current === undefined) return;\r\n    const camera = new THREE.PerspectiveCamera(\r\n      75,\r\n      window.innerWidth / window.innerHeight,\r\n      0.1,\r\n      1000\r\n    );\r\n    const { x, y, z } = CAMERA_START;\r\n    camera.position.set(x, y, z);\r\n    camera.lookAt(0, 0, 0);\r\n    var controls;\r\n    // CONTROLS\r\n    // ORBIT\r\n    // const controls = new OrbitControls(camera, worldContainerRef.current);\r\n    // controls.maxPolarAngle = Math.PI / 2;\r\n    // POINTER\r\n    var moveForward = false,\r\n      moveBackward = false,\r\n      moveLeft = false,\r\n      moveRight = false;\r\n    const velocity = new THREE.Vector3();\r\n    const direction = new THREE.Vector3();\r\n    const setupPointerControls = () => {\r\n      controls = new PointerLockControls(camera, worldContainerRef.current);\r\n      worldContainerRef.current.addEventListener(\"click\", () =>\r\n        controls.lock()\r\n      );\r\n      scene.add(controls.getObject());\r\n\r\n      function onKeyDown(e) {\r\n        switch (e.key) {\r\n          case \"w\":\r\n            moveForward = true;\r\n            break;\r\n          case \"a\":\r\n            moveLeft = true;\r\n            break;\r\n          case \"s\":\r\n            moveBackward = true;\r\n            break;\r\n          case \"d\":\r\n            moveRight = true;\r\n            break;\r\n          case \" \":\r\n            if (canJump) velocity.y += 200;\r\n            canJump = false;\r\n            break;\r\n        }\r\n      }\r\n      function onKeyUp(e) {\r\n        switch (e.key) {\r\n          case \"w\":\r\n            moveForward = false;\r\n            break;\r\n          case \"a\":\r\n            moveLeft = false;\r\n            break;\r\n          case \"s\":\r\n            moveBackward = false;\r\n            break;\r\n          case \"d\":\r\n            moveRight = false;\r\n            break;\r\n        }\r\n      }\r\n\r\n      document.addEventListener(\"keydown\", onKeyDown, false);\r\n      document.addEventListener(\"keyup\", onKeyUp, false);\r\n    };\r\n\r\n    // END OF CONTROLS SETUP\r\n\r\n    const renderer = new THREE.WebGLRenderer();\r\n    renderer.setClearColor(new THREE.Color(1.0, 1.0, 1.0));\r\n    renderer.setSize(window.innerWidth, window.innerHeight);\r\n    renderer.setPixelRatio(window.devicePixelRatio);\r\n    renderer.shadowMap.enabled = true;\r\n    renderer.shadowMap.type = THREE.PCFSoftShadowMap;\r\n\r\n    worldContainerRef.current.appendChild(renderer.domElement);\r\n    // worldContainerRef.current.appendChild(stats.dom);\r\n    const startButtonObject = startButton();\r\n    createFloor();\r\n    createLight();\r\n\r\n    function mouseVector(e) {\r\n      const coords = { x: 0, y: 0 };\r\n      if (e instanceof TouchEvent) {\r\n        coords.x = e.touches[0].clientX;\r\n        coords.y = e.touches[0].clientY;\r\n      } else {\r\n        coords.x = e.clientX;\r\n        coords.y = e.clientY;\r\n      }\r\n      mouse.x = (coords.x / window.innerWidth) * 2 - 1;\r\n      mouse.y = -(coords.y / window.innerHeight) * 2 + 1;\r\n    }\r\n\r\n    worldContainerRef.current.addEventListener(\"touchstart\", checkClick, true);\r\n    worldContainerRef.current.addEventListener(\"click\", checkClick, true);\r\n\r\n    var analyser;\r\n    var dataArray;\r\n    const setupAudioContext = () => {\r\n      if (navigator.platform === \"iPhone\" || navigator.platform === \"Android\")\r\n        return;\r\n      var audioCtx = new (window.AudioContext || window.webkitAudioContext)();\r\n      analyser = audioCtx.createAnalyser();\r\n      var source = audioCtx.createMediaElementSource(videoRef.current);\r\n      source.connect(analyser);\r\n      source.connect(audioCtx.destination);\r\n      analyser.fftSize = 512;\r\n      var bufferLength = analyser.frequencyBinCount;\r\n      dataArray = new Uint8Array(bufferLength);\r\n    };\r\n\r\n    var started = false;\r\n    var clickAnimationRunning = false;\r\n    function checkClick(e) {\r\n      mouseVector(e);\r\n      ray.setFromCamera(mouse, camera);\r\n      const intersections = ray.intersectObjects([startButtonObject]);\r\n      if (intersections.length > 0) {\r\n        // controls.autoRotate = true;\r\n        setupAudioContext();\r\n        videoRef.current.play();\r\n        if (!clickAnimationRunning) {\r\n          clickAnimationRunning = true;\r\n          const start = performance.now();\r\n          const currentColor = startButtonObject.material.color;\r\n          var frame;\r\n          const buttonAnimation = () => {\r\n            const now = (performance.now() - start) * 0.001;\r\n\r\n            startButtonObject.material.color.set(\r\n              currentColor.lerp(new THREE.Color(0, 0, 1), now)\r\n            );\r\n\r\n            startButtonObject.material.opacity = lerp(now - 1, 1, 0);\r\n\r\n            setPhase(1);\r\n            if (now > 2) {\r\n              started = true;\r\n              setupPointerControls();\r\n              try {\r\n                controls.lock();\r\n              } catch (err) {\r\n                // Simulate pointer lock to start falling\r\n                controls.isLocked = true;\r\n              }\r\n\r\n              createOrb({ n: 1000 });\r\n\r\n              return cancelAnimationFrame(frame);\r\n            }\r\n            frame = requestAnimationFrame(buttonAnimation);\r\n          };\r\n          buttonAnimation();\r\n        }\r\n      }\r\n      worldContainerRef.current.removeEventListener(\r\n        \"touchstart\",\r\n        checkClick,\r\n        true\r\n      );\r\n      worldContainerRef.current.removeEventListener(\"click\", checkClick, true);\r\n    }\r\n\r\n    document.addEventListener(\"touchstart\", handleTouchStart, false);\r\n    document.addEventListener(\"touchend\", handleTouchEnd, false);\r\n    document.addEventListener(\"touchmove\", handleTouchMove, false);\r\n\r\n    var xDown = null;\r\n    var yDown = null;\r\n\r\n    function getTouches(evt) {\r\n      return (\r\n        evt.touches || // browser API\r\n        evt.originalEvent.touches\r\n      ); // jQuery\r\n    }\r\n\r\n    const rotateStart = new THREE.Vector2();\r\n    var looking = false;\r\n    function handleTouchStart(evt) {\r\n      const firstTouch = getTouches(evt)[0];\r\n      xDown = firstTouch.clientX;\r\n      yDown = firstTouch.clientY;\r\n      looking = true;\r\n      rotateStart.set(evt.touches[0].clientX, evt.touches[0].clientY);\r\n    }\r\n\r\n    const rotateEnd = new THREE.Vector2();\r\n    const rotateDelta = new THREE.Vector2();\r\n    var phi = 0;\r\n    var theta = (1 * Math.PI) / 180;\r\n    function handleTouchMove(evt) {\r\n      rotateEnd.set(evt.touches[0].clientX, evt.touches[0].clientY);\r\n      rotateDelta.subVectors(rotateEnd, rotateStart);\r\n      rotateStart.copy(rotateEnd);\r\n      phi =\r\n        phi +\r\n        ((2 * Math.PI * rotateDelta.y) / renderer.domElement.height) * 0.3;\r\n      theta +=\r\n        ((2 * Math.PI * rotateDelta.x) / renderer.domElement.width) * 0.5;\r\n      if (!xDown || !yDown) {\r\n        return;\r\n      }\r\n      var xUp = evt.touches[0].clientX;\r\n      var yUp = evt.touches[0].clientY;\r\n\r\n      var xDiff = xDown - xUp;\r\n      var yDiff = yDown - yUp;\r\n\r\n      if (Math.abs(xDiff) > Math.abs(yDiff)) {\r\n        /*most significant*/\r\n        if (xDiff > 0) {\r\n          /* left swipe */\r\n          // look(evt);\r\n        } else {\r\n          /* right swipe */\r\n          // look(evt);\r\n        }\r\n      } else {\r\n        if (yDiff > 0) {\r\n          /* up swipe */\r\n          moveBackward = true;\r\n        } else {\r\n          /* down swipe */\r\n          moveForward = true;\r\n        }\r\n      }\r\n      /* reset values */\r\n      xDown = null;\r\n      yDown = null;\r\n    }\r\n\r\n    function handleTouchEnd(evt) {\r\n      moveForward = false;\r\n      moveBackward = false;\r\n      looking = false;\r\n    }\r\n\r\n    var scope = {};\r\n    scope.minPolarAngle = 0;\r\n    scope.maxPolarAngle = Math.PI;\r\n    var euler = new THREE.Euler(0, 0, 0, \"YXZ\");\r\n\r\n    const bbox = new THREE.Box3();\r\n    let frame;\r\n    var canJump = true;\r\n    var prevTime;\r\n    var orientation = new THREE.Quaternion();\r\n    var previousPhi;\r\n    var previousTheta;\r\n    function animate() {\r\n      frame = requestAnimationFrame(animate);\r\n\r\n      if (phi === previousPhi && theta === previousTheta) {\r\n      } else if (started) {\r\n        previousPhi = phi;\r\n        previousTheta = theta;\r\n        euler.set(phi, theta, 0, \"YXZ\");\r\n        orientation.setFromEuler(euler);\r\n        camera.quaternion.copy(orientation);\r\n      }\r\n\r\n      // camera.position.x = radius * Math.cos(angle);\r\n      // camera.position.z = radius * Math.sin(angle);\r\n      // POINTER CONTROLS MOVEMENTS\r\n      const time = performance.now();\r\n      if (controls && controls.isLocked) {\r\n        direction.z = Number(moveForward) - Number(moveBackward);\r\n        direction.x = Number(moveRight) - Number(moveLeft);\r\n        direction.normalize(); // this ensures consistent movements in all directions\r\n\r\n        const delta = (time - prevTime) / 1000;\r\n        velocity.x -= velocity.x * 10.0 * delta;\r\n        velocity.z -= velocity.z * 10.0 * delta;\r\n\r\n        // find intersections\r\n        const controlObject = controls.getObject();\r\n        const oldPosition = new THREE.Vector3();\r\n        oldPosition.copy(controlObject.position);\r\n\r\n        velocity.y -= 9.8 * 100.0 * delta; // 100.0 = mass\r\n\r\n        if (moveForward || moveBackward)\r\n          velocity.z -= direction.z * 400.0 * delta;\r\n        if (moveLeft || moveRight) velocity.x -= direction.x * 400.0 * delta;\r\n\r\n        controls.moveRight(-velocity.x * delta);\r\n        controls.moveForward(-velocity.z * delta);\r\n\r\n        const sphere = new THREE.Sphere(controlObject.position, 2);\r\n\r\n        // intersection\r\n        if (collisionObjects.length > 0) {\r\n          const object = collisionObjects[0];\r\n          object.geometry.computeBoundingBox();\r\n          bbox\r\n            .copy(object.geometry.boundingBox)\r\n            .applyMatrix4(object.matrixWorld);\r\n          const intersections = sphere.intersectsBox(bbox);\r\n          if (intersections) {\r\n            velocity.y = Math.max(0, velocity.y);\r\n            if (controls.getObject().position.y === 0)\r\n              controlObject.position.copy(oldPosition);\r\n            canJump = true;\r\n          }\r\n        }\r\n        controls.getObject().position.y += velocity.y * delta; // new behavior\r\n        if (controls.getObject().position.y < 0) {\r\n          velocity.y = 0;\r\n          controls.getObject().position.y = 0;\r\n\r\n          canJump = true;\r\n        }\r\n      }\r\n      prevTime = time;\r\n\r\n      // END OF POINTER CONTROLS MOVEMENTS\r\n\r\n      if (analyser) {\r\n        analyser.getByteFrequencyData(dataArray);\r\n      }\r\n      for (let i = 0; i < orbs.length; i++) {\r\n        orbs[i].rotation.y += 0.01;\r\n        const wave = Math.sin(time * 0.001 + i);\r\n        orbs[i].scale.set(wave, wave, wave);\r\n        if (analyser) {\r\n          const d = dataArray[i % 256] / 100;\r\n          orbs[i].scale.set(d, d, d);\r\n        }\r\n      }\r\n\r\n      renderer.render(scene, camera);\r\n      stats.update();\r\n      //controls.update();\r\n    }\r\n    animate();\r\n\r\n    const onWindowResize = () => {\r\n      camera.aspect = window.innerWidth / window.innerHeight;\r\n      camera.updateProjectionMatrix();\r\n      renderer.setSize(window.innerWidth, window.innerHeight);\r\n    };\r\n\r\n    window.addEventListener(\"resize\", onWindowResize, false);\r\n\r\n    return () => {\r\n      cancelAnimationFrame(frame);\r\n      window.removeEventListener(\"resize\", onWindowResize, false);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div style={{ width: \"100%\", height: \"100%\" }} ref={worldContainerRef}>\r\n      <PressStart phase={phase} />\r\n      <ArtistStream\r\n        createScreen={createScreen}\r\n        phase={phase}\r\n        videoRef={videoRef}\r\n        test={test}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\nimport \"./index.scss\";\nimport ThreeWorld from \"./ThreeWorld\";\n\nexport default function () {\n  return (\n    <div>\n      <ThreeWorld />\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}